{"version":3,"names":["stockFinderCss","StockFinder","input","appState","stockSymbols","stockSymbol","stockSymbolChanged","newValue","oldValue","console","log","this","value","fetchStockSymbols","stockSymbolChangedEmitter","formHandler","event","preventDefault","userEnteredStockSymbol","trim","sleep","response","fetch","data","json","bestMatches","undefined","error","map","match","symbol","name","fetchStockPrice","emit","componentDidLoad","render","h","Host","key","onSubmit","bind","htmlFor","type","id","placeholder","ref","el","length","class","stock","onClick","style","width","margin","time","Promise","resolve","setTimeout","stockLoadingCss","LoadingStock","stockPriceCss","StockPrice","stockPrice","fetchStockPriceForStockSymbol","hostData","stockSymbolChangedListener","newStockSymbol","detail","constructor","hostRef","componentWillLoad","componentWillUpdate","componentDidUpdate","componentWillRender","componentDidRender","disconnectedCallback","async","toUpperCase","alert","__stencil_render","marginLeft","border","marginTop","padding"],"sources":["src/components/stock-finder/stock-finder.css?tag=stock-finder&encapsulation=shadow","src/components/stock-finder/stock-finder.tsx","src/components/loading-stock/stock-loading.css?tag=stock-loading&encapsulation=shadow","src/components/loading-stock/stock-loading.tsx","src/components/stock-price/stock-price.css?tag=stock-price&encapsulation=shadow","src/components/stock-price/stock-price.tsx"],"sourcesContent":[":host {\n  display: block;\n  border: 2px solid #3b015d;\n  font-family: sans-serif;\n  padding: 1rem;\n  border-radius: 8px;\n  width: 350px;\n  margin: auto;\n  max-width: 100%;\n  margin-top: 2rem;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  max-width: 300px;\n  margin: auto;\n  padding: 1rem;\n}\ninput {\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\ninput[type='text'] {\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\nbutton {\n  padding: 0.5rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\nbutton:hover {\n  background-color: #0056b3;\n}\n.instruction,\n.error {\n  font-size: 0.9rem;\n  color: #555;\n  text-align: center;\n  margin-bottom: 1rem;\n}\n.error {\n  color: tomato;\n}\n.stock-symbols-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n.stock-symbols-list li {\n  padding: 0.5rem;\n  border-bottom: 1px solid #ccc;\n}\n.stock-symbols-list li:last-child {\n  border-bottom: none;\n}\n.stock-symbols-list li:hover {\n  background-color: #f0f0f0;\n}\n\n.stock-symbols-list li:active {\n  outline: 2px solid burlywood;\n  outline-offset: -2px;\n  background-color: blue;\n  color: white;\n}\n","import { Component, Host, Event, Prop, State, Watch, h, EventEmitter } from '@stencil/core';\n\nexport interface StockSymbolMatch {\n  symbol: string;\n  name: string;\n  type: string;\n  region: string;\n  marketOpen: string;\n  marketClose: string;\n  timezone: string;\n  currency: string;\n  matchScore: string;\n}\n\n@Component({\n  tag: 'stock-finder',\n  styleUrl: 'stock-finder.css',\n  shadow: true,\n})\nexport class StockFinder {\n  input: HTMLInputElement;\n  @State() appState: 'idle' | 'loading' | 'success' | 'error' = 'idle';\n  @State() stockSymbols: { symbol: string; name: string }[] = [];\n  @Prop({ mutable: true, reflect: true }) stockSymbol: string;\n  @Watch('stockSymbol')\n  stockSymbolChanged(newValue: string, oldValue: string) {\n    console.log(`stockSymbol changed from ${oldValue} to ${newValue}`);\n    if (newValue && newValue !== oldValue) {\n      this.input.value = newValue;\n      this.fetchStockSymbols(newValue);\n    }\n  }\n\n  @Event({ eventName: 'stockSymbolChanged', bubbles: true, composed: true }) stockSymbolChangedEmitter: EventEmitter<string>;\n\n  formHandler(event: Event) {\n    event.preventDefault(); // Prevent the default form submission behavior\n    const userEnteredStockSymbol = this.input.value.trim();\n    this.stockSymbol = userEnteredStockSymbol; // Update the stockSymbol property\n  }\n\n  async fetchStockSymbols(stockSymbol: string) {\n    this.appState = 'loading';\n    await sleep(2000); // Set the app state to loading\n    const response = await fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${stockSymbol}&apikey=G5Q599MACNAP8JET`);\n    const data = await response.json();\n    if (data.bestMatches === undefined) {\n      this.appState = 'error'; // Set the app state to error if no matches found\n      console.error('No matches found for the stock symbol:', stockSymbol);\n      this.stockSymbols = [];\n      return;\n    }\n    this.appState = 'success'; // Set the app state to success\n    this.stockSymbols = data?.bestMatches?.map((match: StockSymbolMatch) => ({ symbol: match['1. symbol'], name: match['2. name'] })) ?? [];\n    console.log('Fetched stock symbols:', this.stockSymbols);\n  }\n\n  fetchStockPrice(stockSymbol: string) {\n    this.stockSymbolChangedEmitter.emit(stockSymbol);\n  }\n\n  componentDidLoad() {\n    console.log('Component did load');\n    if (this.stockSymbol) {\n      this.input.value = this.stockSymbol; // Set the input value if stockSymbol is provided\n      this.fetchStockSymbols(this.stockSymbol);\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <form onSubmit={this.formHandler.bind(this)}>\n          <label htmlFor=\"stock-symbol-finder\">Enter Stock Symbol:</label>\n          <input\n            type=\"text\"\n            id=\"stock-symbol-finder\"\n            placeholder=\"Enter stock symbol\"\n            ref={el => {\n              this.input = el;\n            }}\n            value={this.stockSymbol}\n          />\n          <button type=\"submit\">Find Stock</button>\n        </form>\n        {this.stockSymbols.length > 0 && (\n          <ul class=\"stock-symbols-list\">\n            {this.stockSymbols.map(stock => (\n              <li key={stock.symbol} onClick={this.fetchStockPrice.bind(this, stock.symbol)}>\n                <strong>{stock.symbol}</strong> - {stock.name}\n              </li>\n            ))}\n          </ul>\n        )}\n        {this.appState === 'loading' && <stock-loading style={{ width: 'fit-content', margin: 'auto' }}></stock-loading>}\n        {this.appState !== 'idle' && this.stockSymbols.length === 0 && !this.stockSymbol && <p class=\"instruction\">Please enter a stock symbol to search.</p>}\n        {this.appState === 'error' && <p class=\"error\">Something went wrong.</p>}\n        {/* <p>Note: This component uses the Alpha Vantage API for stock symbol search.</p>\n        <p>API Key: 964XYIDUV8SBYCB0</p>\n        <p>\n          For more information, visit <a href=\"https://www.alphavantage.co/documentation/\">Alpha Vantage Documentation</a>.\n        </p> */}\n      </Host>\n    );\n  }\n}\nfunction sleep(time: number) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\n",":host {\n  display: block;\n}\n\n/* HTML: <div class=\"loader\"></div> */\n.loader {\n  width: 15px;\n  aspect-ratio: 1;\n  --_g: no-repeat radial-gradient(circle closest-side, #000 90%, #0000);\n  background: var(--_g) 0 0, var(--_g) 0 100%, var(--_g) 100% 100%;\n  background-size: 40% 40%;\n  animation: l11 1s infinite linear;\n}\n@keyframes l11 {\n  25% {\n    background-position: 100% 0, 0 100%, 100% 100%;\n  }\n  50% {\n    background-position: 100% 0, 0 0, 100% 100%;\n  }\n  75% {\n    background-position: 100% 0, 0 0, 0 100%;\n  }\n  100% {\n    background-position: 100% 100%, 0 0, 0 100%;\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'stock-loading',\n  styleUrl: 'stock-loading.css',\n  shadow: true,\n})\nexport class LoadingStock {\n  render() {\n    return (\n      <Host>\n        <div class=\"loader\"></div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  border: 2px solid #3b015d;\n  margin: 2rem;\n  padding: 1rem;\n  border-radius: 8px;\n  width: 350px;\n  margin: auto;\n  max-width: 100%;\n  font-family: sans-serif;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 300px;\n}\n\ninput[type='text'] {\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\nbutton {\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n#stock-price {\n  margin-top: 20px;\n  font-size: 1.2em;\n  text-align: center;\n  color: #333;\n  font-weight: lighter;\n  font-size: small;\n  font-style: oblique;\n}\n","import { Component, Element, Prop, Listen, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'stock-price',\n  styleUrl: 'stock-price.css',\n  shadow: true,\n})\nexport class StockPrice {\n  input: HTMLInputElement;\n  @State() appState: 'idle' | 'loading' | 'success' | 'error' = 'idle';\n  @State() stockPrice: string = '';\n\n  // Refers to the host element of the component\n  @Element() el: HTMLElement;\n\n  @Prop({ mutable: true, reflect: true }) stockSymbol: string;\n\n  @Watch('stockSymbol')\n  stockSymbolChanged(newValue: string, oldValue: string) {\n    console.log(`stockSymbol changed from ${oldValue} to ${newValue}`);\n    if (newValue && newValue !== oldValue) {\n      this.input.value = newValue; // Update the input value when stockSymbol changes\n      this.fetchStockPriceForStockSymbol(newValue);\n    }\n  }\n\n  hostData() {\n    return {\n      class: 'error',\n    };\n  }\n\n  @Listen('stockSymbolChanged', { target: 'document' })\n  stockSymbolChangedListener(event: CustomEvent<string>) {\n    const newStockSymbol = event.detail;\n    console.log(`Received stock symbol from event: ${newStockSymbol}`);\n    this.stockSymbol = newStockSymbol; // Update the stockSymbol property\n  }\n\n  constructor() {\n    this.fetchStockPrice = this.fetchStockPrice.bind(this);\n  }\n\n  componentWillLoad() {\n    console.log('Component will load');\n    console.log(this.stockSymbol);\n  }\n\n  componentDidLoad() {\n    console.log('Component did load');\n    if (this.stockSymbol) {\n      this.input.value = this.stockSymbol; // Set the input value if stockSymbol is provided\n      this.fetchStockPriceForStockSymbol(this.stockSymbol);\n    }\n  }\n  componentWillUpdate() {\n    console.log('Component will update');\n  }\n\n  componentDidUpdate() {\n    console.log('Component did update');\n  }\n\n  componentWillRender() {\n    console.log('Component will render');\n  }\n\n  componentDidRender() {\n    console.log('Component did render');\n  }\n\n  disconnectedCallback() {\n    console.log('Component did unload');\n  }\n\n  fetchStockPrice = async (event: Event) => {\n    event.preventDefault();\n    // Option 1\n    // const form = event.target as HTMLFormElement;\n    // const stockSymbol = form['stock-symbol'].value.trim().toUpperCase();\n\n    //Option 2\n    // const stockSymbol = this.el.shadowRoot.querySelector<HTMLInputElement>('#stock-symbol')?.value.trim().toUpperCase();\n\n    //Option 3\n    const stockSymbol = this.input.value.trim().toUpperCase();\n    this.stockSymbol = stockSymbol; // Update the stockSymbol property\n    if (!stockSymbol) {\n      alert('Please enter a valid stock symbol.');\n      return;\n    }\n  };\n\n  private async fetchStockPriceForStockSymbol(stockSymbol: string) {\n    this.appState = 'loading';\n    const response = await fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=964XYIDUV8SBYCB0`);\n    const data = await response.json();\n    this.appState = 'success';\n    const stockPrice = data['Global Quote'] ? data['Global Quote']['05. price'] : '0.00';\n    this.stockPrice = stockPrice;\n  }\n\n  render() {\n    return [\n      <stock-finder style={{ marginLeft: '-16px', border: '0px', marginTop: '0px' }}></stock-finder>,\n      <form onSubmit={this.fetchStockPrice} style={{ margin: 'auto', padding: '1rem' }}>\n        <label htmlFor=\"stock-symbol\">Enter Stock Symbol:</label>\n        <input type=\"text\" id=\"stock-symbol\" name=\"stock-symbol\" placeholder=\"e.g., AAPL, GOOGL\" ref={el => (this.input = el)} value={this.stockSymbol} />\n        <button type=\"submit\">Get Price</button>\n      </form>,\n      <div>\n        <p id=\"stock-price\">\n          {this.appState == 'loading' ? (\n            <stock-loading></stock-loading>\n          ) : this.appState === 'success' ? (\n            `Current Price: ${this.stockPrice}`\n          ) : this.appState === 'error' ? (\n            'Something went wrong'\n          ) : (\n            ''\n          )}\n        </p>\n      </div>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}