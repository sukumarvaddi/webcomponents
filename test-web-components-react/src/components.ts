"use client";

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from "@stencil/react-output-target/runtime";
import { createComponent } from "@stencil/react-output-target/runtime";
import React from "react";
import {
  MyComponent as MyComponentElement,
  defineCustomElement as defineMyComponent,
} from "./web-components-stencil/distFromStencil/components/my-component.js";
import {
  SideDrawer as SideDrawerElement,
  defineCustomElement as defineSideDrawer,
} from "./web-components-stencil/distFromStencil/components/side-drawer.js";
import {
  StockFinder as StockFinderElement,
  defineCustomElement as defineStockFinder,
} from "./web-components-stencil/distFromStencil/components/stock-finder.js";
import {
  StockLoading as StockLoadingElement,
  defineCustomElement as defineStockLoading,
} from "./web-components-stencil/distFromStencil/components/stock-loading.js";
import {
  StockPrice as StockPriceElement,
  defineCustomElement as defineStockPrice,
} from "./web-components-stencil/distFromStencil/components/stock-price.js";

export type MyComponentEvents = NonNullable<unknown>;

export const MyComponent: StencilReactComponent<MyComponentElement, MyComponentEvents> = /*@__PURE__*/ createComponent<
  MyComponentElement,
  MyComponentEvents
>({
  tagName: "my-component",
  elementClass: MyComponentElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {} as MyComponentEvents,
  defineCustomElement: defineMyComponent,
});

export type SideDrawerEvents = NonNullable<unknown>;

export const SideDrawer: StencilReactComponent<SideDrawerElement, SideDrawerEvents> = /*@__PURE__*/ createComponent<
  SideDrawerElement,
  SideDrawerEvents
>({
  tagName: "side-drawer",
  elementClass: SideDrawerElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {} as SideDrawerEvents,
  defineCustomElement: defineSideDrawer,
});

export type StockFinderEvents = { onStockSymbolChanged: EventName<CustomEvent<string>> };

export const StockFinder: StencilReactComponent<StockFinderElement, StockFinderEvents> = /*@__PURE__*/ createComponent<
  StockFinderElement,
  StockFinderEvents
>({
  tagName: "stock-finder",
  elementClass: StockFinderElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: { onStockSymbolChanged: "stockSymbolChanged" } as StockFinderEvents,
  defineCustomElement: defineStockFinder,
});

export type StockLoadingEvents = NonNullable<unknown>;

export const StockLoading: StencilReactComponent<StockLoadingElement, StockLoadingEvents> =
  /*@__PURE__*/ createComponent<StockLoadingElement, StockLoadingEvents>({
    tagName: "stock-loading",
    elementClass: StockLoadingElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as StockLoadingEvents,
    defineCustomElement: defineStockLoading,
  });

export type StockPriceEvents = NonNullable<unknown>;

export const StockPrice: StencilReactComponent<StockPriceElement, StockPriceEvents> = /*@__PURE__*/ createComponent<
  StockPriceElement,
  StockPriceEvents
>({
  tagName: "stock-price",
  elementClass: StockPriceElement,
  // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
  react: React,
  events: {} as StockPriceEvents,
  defineCustomElement: defineStockPrice,
});
